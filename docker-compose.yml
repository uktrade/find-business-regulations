# Find business regulations docker-compose configuration.
volumes:
  postgres_data:
    driver: local
#  redis_data:
#      driver: local

services:
  db:
    image: postgres:16.2
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=fbr
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - proxynet

  web:
    build:
      context: .
      cache_from:
        - fbr/application:latest
    image: fbr/application:latest
    env_file:
      - local.env
    ports:
      - "8081:8080"
    # depends_on:
    #   db:
    #     condition: service_healthy
    volumes:
      - .:/app
      - ./ssl:/app/ssl
    networks:
      - proxynet

#  redis:
#    image: redis
#    # Expose port so we can query it for debugging
#    ports:
#      - "6379:6379"
#
#  celery-worker:
#    build:
#      context: .
#      cache_from:
#        - fbr/application:latest
#    image: fbr/application:latest
#    command: celery --app fbr.celery_app worker --task-events --loglevel INFO
#    entrypoint: ''
#    volumes:
#      - .:/app
#    healthcheck:
#      test: [ "CMD-SHELL", "python -m dbt_copilot_python.celery_health_check.healthcheck" ]
#      interval: 10s
#      timeout: 5s
#      retries: 2
#      start_period: 5s
#    depends_on:
#      - redis
#      - db
#    environment:
#      REDIS_ENDPOINT: redis://redis:6379
#      DEBUG: true
#      DJANGO_SETTINGS_MODULE: fbr.settings
#      RDS_POSTGRES_CREDENTIALS: '{"password":"postgres","dbname":"fbr","engine":"postgres","port":5432,"dbInstanceIdentifier":"xxx","host":"db","username":"postgres"}'
#      DATABASE_URL: postgres://postgres:postgres@host.docker.internal:5432/fbr  # pragma: allowlist secret
#
#  celery-beats:
#    build:
#      context: .
#      cache_from:
#        - fbr/application:latest
#    image: fbr/application:latest
#    command: celery --app fbr.celery_app beat --loglevel INFO
#    entrypoint: ''
#    volumes:
#      - .:/app
#    healthcheck:
#      test: [ "CMD-SHELL", "python -m dbt_copilot_python.celery_health_check.healthcheck" ]
#      interval: 10s
#      timeout: 5s
#      retries: 2
#      start_period: 5s
#    depends_on:
#      - redis
#      - db
#    environment:
#      REDIS_ENDPOINT: redis://redis:6379
#      DEBUG: true
#      DJANGO_SETTINGS_MODULE: fbr.settings
#      RDS_POSTGRES_CREDENTIALS: '{"password":"postgres","dbname":"fbr","engine":"postgres","port":5432,"dbInstanceIdentifier":"xxx","host":"db","username":"postgres"}'
#      DATABASE_URL: postgres://postgres:postgres@host.docker.internal:5432/fbr  # pragma: allowlist secret

networks:
  proxynet:
    name: fbr_network
